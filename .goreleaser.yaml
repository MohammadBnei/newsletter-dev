version: 2

env:
  - DOCKER_USERNAME={{ if index .Env "DOCKER_USERNAME"  }}{{ .Env.DOCKER_USERNAME }}{{ else }}mohamaddocker{{ end }}

project_name: newsletter-dev

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - make generate

builds:
  - main: ./cmd/server.go
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarm:
      - "6"
      - "7"

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

dockers:
  - image_templates:
      - "{{.Env.DOCKER_USERNAME}}/{{.ProjectName}}:latest"
      - "{{.Env.DOCKER_USERNAME}}/{{.ProjectName}}:{{ .Tag }}"

changelog:
  sort: asc
  groups:
    - title: Features
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: "Bug fixes"
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: "Docs"
      regexp: '^.*?docs(\([[:word:]]+\))??!?:.+$'
      order: 2
    - title: "CI"
      regexp: '^.*?ci(\([[:word:]]+\))??!?:.+$'
      order: 3
    - title: "Build"
      regexp: '^.*?build(\([[:word:]]+\))??!?:.+$'
      order: 4
    - title: Others
      order: 999
  filters:
    exclude:
      - typo
      - (?i)foo
